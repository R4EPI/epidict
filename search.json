[{"path":"https://r4epi.github.io/epidict/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"https://r4epi.github.io/epidict/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to epidict","title":"Contributing to epidict","text":"outlines propose change epidict. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://r4epi.github.io/epidict/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to epidict","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://r4epi.github.io/epidict/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to epidict","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://r4epi.github.io/epidict/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to epidict","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://r4epi.github.io/epidict/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to epidict","text":"Please note epidict project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://r4epi.github.io/epidict/CONTRIBUTING.html","id":"see-tidyverse-development-contributing-guide","dir":"","previous_headings":"","what":"See tidyverse development contributing guide","title":"Contributing to epidict","text":"details.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://r4epi.github.io/epidict/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2019 Applied Epi Incorporated  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. epidict Copyright (C) 2019 Applied Epi Incorporated This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://r4epi.github.io/epidict/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with epidict","title":"Getting help with epidict","text":"Thanks using epidict. filing issue, places explore pieces put together make process smooth possible. Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed. right place, need file issue, please review “File issues” paragraph tidyverse contributing guidelines. Thanks help!","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"variables-in-the-dictionary","dir":"Articles","previous_headings":"Acute Jaundice Syndrome (AJS)","what":"Variables in the dictionary","title":"MSF Outbreak Dictionaries","text":"AJS dictionary contains definitions 68 variables:","code":""},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"option-codes","dir":"Articles","previous_headings":"Acute Jaundice Syndrome (AJS)","what":"Option codes","title":"MSF Outbreak Dictionaries","text":"dictionaries exported using option codes can translated human-readable format. table shows translated.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"variables-in-the-dictionary-1","dir":"Articles","previous_headings":"Cholera","what":"Variables in the dictionary","title":"MSF Outbreak Dictionaries","text":"Cholera dictionary contains definitions 45 variables:","code":""},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"option-codes-1","dir":"Articles","previous_headings":"Cholera","what":"Option codes","title":"MSF Outbreak Dictionaries","text":"dictionaries exported using option codes can translated human-readable format. table shows translated.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"variables-in-the-dictionary-2","dir":"Articles","previous_headings":"Measles","what":"Variables in the dictionary","title":"MSF Outbreak Dictionaries","text":"Measles dictionary contains definitions 52 variables:","code":""},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"option-codes-2","dir":"Articles","previous_headings":"Measles","what":"Option codes","title":"MSF Outbreak Dictionaries","text":"dictionaries exported using option codes can translated human-readable format. table shows translated.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"variables-in-the-dictionary-3","dir":"Articles","previous_headings":"Meningitis","what":"Variables in the dictionary","title":"MSF Outbreak Dictionaries","text":"Meningitis dictionary contains definitions 53 variables:","code":""},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"option-codes-3","dir":"Articles","previous_headings":"Meningitis","what":"Option codes","title":"MSF Outbreak Dictionaries","text":"dictionaries exported using option codes can translated human-readable format. table shows translated.","code":""},{"path":"https://r4epi.github.io/epidict/articles/Outbreaks.html","id":"exploring-the-dictionaries","dir":"Articles","previous_headings":"","what":"Exploring the dictionaries","title":"MSF Outbreak Dictionaries","text":"can explore excel-formatted dictionaries browseURL(system.file(\"extdata\", \"MSF-outbreak-dict.xlsx\", package = \"epidict\")), treat read-.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/articles/Surveys.html","id":"variables-in-the-dictionary","dir":"Articles","previous_headings":"Retrospective mortality and access to care (“mortality”)","what":"Variables in the dictionary","title":"MSF Survey Dictionaries","text":"Mortality dictionary contains definitions 174 variables:","code":""},{"path":"https://r4epi.github.io/epidict/articles/Surveys.html","id":"option-codes","dir":"Articles","previous_headings":"Retrospective mortality and access to care (“mortality”)","what":"Option codes","title":"MSF Survey Dictionaries","text":"dictionaries exported using option codes can translated human-readable format. table shows translated.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/articles/Surveys.html","id":"variables-in-the-dictionary-1","dir":"Articles","previous_headings":"Malnutrition (“nutrition”)","what":"Variables in the dictionary","title":"MSF Survey Dictionaries","text":"Nutrition dictionary contains definitions 27 variables:","code":""},{"path":"https://r4epi.github.io/epidict/articles/Surveys.html","id":"option-codes-1","dir":"Articles","previous_headings":"Malnutrition (“nutrition”)","what":"Option codes","title":"MSF Survey Dictionaries","text":"dictionaries exported using option codes can translated human-readable format. table shows translated.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/articles/Surveys.html","id":"variables-in-the-dictionary-2","dir":"Articles","previous_headings":"Vaccination Coverage (“vaccination_long” or “Vaccination_short”)","what":"Variables in the dictionary","title":"MSF Survey Dictionaries","text":"two Vaccination dictionaries - long form short form. Vaccination long dictionary contains definitions 106 variables: Vaccination short dictionary contains definitions 38 variables:","code":""},{"path":"https://r4epi.github.io/epidict/articles/Surveys.html","id":"option-codes-2","dir":"Articles","previous_headings":"Vaccination Coverage (“vaccination_long” or “Vaccination_short”)","what":"Option codes","title":"MSF Survey Dictionaries","text":"dictionaries exported using option codes can translated human-readable format. table shows translated. vaccination long: vaccination short:","code":""},{"path":"https://r4epi.github.io/epidict/articles/Surveys.html","id":"exploring-the-dictionaries","dir":"Articles","previous_headings":"","what":"Exploring the dictionaries","title":"MSF Survey Dictionaries","text":"can explore excel-formatted dictionaries browseURL(system.file(\"extdata\", \"MSF-survey-dict.xlsx\", package = \"epidict\")), treat read-.","code":""},{"path":"https://r4epi.github.io/epidict/articles/intro.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to epidict","text":"can install {epidict} CRAN: bugfix feature yet CRAN, can install via {drat} package: can also install -development version GitHub using {remotes} package (’s guarantee stable):","code":"install.packages(\"epidict\") # install.packages(\"remotes\") remotes::install_github(\"R4EPI/epidict\")"},{"path":"https://r4epi.github.io/epidict/articles/intro.html","id":"accessing-dictionaries","dir":"Articles","previous_headings":"","what":"Accessing dictionaries","title":"Introduction to epidict","text":"four MSF outbreak dictionaries available {epidict} based DHIS2 exports: Acute Jaundice Syndrome (often suspected Hepatitis E) (“AJS”) Cholera/Acute watery diarrhea (“Cholera”) Measles/Rubella (“Measles”) Meningitis (“Meningitis”) can read outbreak dictionaries https://r4epis.netlify.com/outbreaks dictionary can obtained via msf_dict() function, specifies dictionary describes recorded variables (data_element_shortname) rows possible options (categorical): addition, four MSF survey dictionaries available: Retrospective mortality access care (“Mortality”) Malnutrition (“Nutrition”) Vaccination coverage long form (“vaccination_long”) Vaccination coverage short form (“vaccination_short”) can read survey dictionaries https://r4epis.netlify.com/surveys accessible via msf_dict_survey() variables name. can also read Kobo (ODK) dictionaries specifying tempalte = FALSE setting name = <path .xlsx>.","code":"library(\"epidict\") msf_dict(\"AJS\") #> # A tibble: 68 × 8 #>    data_element_uid data_elem…¹ data_…² data_…³ data_…⁴ data_…⁵ used_…⁶ options  #>    <lgl>            <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <list>   #>  1 NA               egen_044_e… event_… Is the… TEXT    NA      HgdrO8… <tibble> #>  2 NA               egen_001_p… case_n… Anonym… TEXT    NA      NA      <tibble> #>  3 NA               egen_004_d… date_o… Date p… DATE    NA      NA      <tibble> #>  4 NA               egen_022_d… detect… How pa… TEXT    NA      BlfHX5… <tibble> #>  5 NA               egen_005_p… patien… Patien… TEXT    NA      YNeOOp… <tibble> #>  6 NA               egen_029_m… msf_in… How ex… TEXT    NA      PN5NWt… <tibble> #>  7 NA               egen_008_a… age_ye… Age of… INTEGE… NA      NA      <tibble> #>  8 NA               egen_009_a… age_mo… Age of… INTEGE… NA      NA      <tibble> #>  9 NA               egen_010_a… age_da… Age of… INTEGE… NA      NA      <tibble> #> 10 NA               egen_011_s… sex     Sex of… TEXT    NA      orgc5Y… <tibble> #> # … with 58 more rows, and abbreviated variable names ¹​data_element_name, #> #   ²​data_element_shortname, ³​data_element_description, #> #   ⁴​data_element_valuetype, ⁵​data_element_formname, ⁶​used_optionset_uid msf_dict(\"Cholera\") #> # A tibble: 45 × 8 #>    data_element_uid data_elem…¹ data_…² data_…³ data_…⁴ data_…⁵ used_…⁶ options  #>    <chr>            <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <list>   #>  1 AafTlSwliVQ      egen_001_p… case_n… Anonym… TEXT    Case n… NA      <tibble> #>  2 OTGOtWBz39J      egen_004_d… date_o… Date p… DATE    Date o… NA      <tibble> #>  3 wnmMr2V3T3u      egen_006_p… patien… Locati… ORGANI… Patien… NA      <tibble> #>  4 sbgqjeVwtb8      egen_008_a… age_ye… Age of… INTEGE… Age in… NA      <tibble> #>  5 eXYhovYyl61      egen_009_a… age_mo… Age of… INTEGE… Age in… NA      <tibble> #>  6 UrYJSk2Wp46      egen_010_a… age_da… Age of… INTEGE… Age in… NA      <tibble> #>  7 D1Ky5K7pFN6      egen_011_s… sex     Sex of… TEXT    Sex     orgc5Y… <tibble> #>  8 dTm5R53YYXC      egen_012_p… pregna… Pregna… TEXT    Pregna… IEjzG2… <tibble> #>  9 FF7d81Zy0yQ      egen_013_p… trimes… If pre… TEXT    Trimes… QjGHFN… <tibble> #> 10 vLAmA6Pmjip      egen_014_p… foetus… If pre… TEXT    Foetus… SR8Jtf… <tibble> #> # … with 35 more rows, and abbreviated variable names ¹​data_element_name, #> #   ²​data_element_shortname, ³​data_element_description, #> #   ⁴​data_element_valuetype, ⁵​data_element_formname, ⁶​used_optionset_uid msf_dict(\"Measles\") #> # A tibble: 52 × 8 #>    data_element_uid data_elem…¹ data_…² data_…³ data_…⁴ data_…⁵ used_…⁶ options  #>    <chr>            <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <list>   #>  1 DE_EGEN_001      egen_001_p… case_n… Anonym… TEXT    Case n… NA      <tibble> #>  2 DE_EGEN_004      egen_004_d… date_o… Date p… DATE    Date o… NA      <tibble> #>  3 DE_EGEN_005      egen_005_p… patien… Patien… TEXT    Patien… YNeOOp… <tibble> #>  4 DE_EGEN_006      egen_006_p… patien… Locati… ORGANI… Patien… NA      <tibble> #>  5 DE_EGEN_008      egen_008_a… age_ye… Age of… INTEGE… Age in… NA      <tibble> #>  6 DE_EGEN_009      egen_009_a… age_mo… Age of… INTEGE… Age in… NA      <tibble> #>  7 DE_EGEN_010      egen_010_a… age_da… Age of… INTEGE… Age in… NA      <tibble> #>  8 DE_EGEN_011      egen_011_s… sex     Sex of… TEXT    Sex     orgc5Y… <tibble> #>  9 DE_EGEN_012      egen_012_p… pregna… Pregna… TEXT    Pregna… IEjzG2… <tibble> #> 10 DE_EGEN_013      egen_013_p… trimes… If pre… TEXT    Trimes… QjGHFN… <tibble> #> # … with 42 more rows, and abbreviated variable names ¹​data_element_name, #> #   ²​data_element_shortname, ³​data_element_description, #> #   ⁴​data_element_valuetype, ⁵​data_element_formname, ⁶​used_optionset_uid msf_dict(\"Meningitis\") #> # A tibble: 53 × 8 #>    data_element_uid data_elem…¹ data_…² data_…³ data_…⁴ data_…⁵ used_…⁶ options  #>    <chr>            <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <list>   #>  1 AafTlSwliVQ      egen_001_p… case_n… Anonym… TEXT    Case n… NA      <tibble> #>  2 OTGOtWBz39J      egen_004_d… date_o… Date p… DATE    Date o… NA      <tibble> #>  3 udXAcFEE1dl      egen_005_p… patien… Patien… TEXT    Patien… YNeOOp… <tibble> #>  4 wnmMr2V3T3u      egen_006_p… patien… Locati… ORGANI… Patien… NA      <tibble> #>  5 sbgqjeVwtb8      egen_008_a… age_ye… Age of… INTEGE… Age in… NA      <tibble> #>  6 eXYhovYyl61      egen_009_a… age_mo… Age of… INTEGE… Age in… NA      <tibble> #>  7 UrYJSk2Wp46      egen_010_a… age_da… Age of… INTEGE… Age in… NA      <tibble> #>  8 D1Ky5K7pFN6      egen_011_s… sex     Sex of… TEXT    Sex     orgc5Y… <tibble> #>  9 ADfNqpCL5kf      egen_015_e… exit_s… Final … TEXT    Exit s… hO9TET… <tibble> #> 10 JZ8yqTow79G      egen_016_d… date_o… Date p… DATE    Exit d… NA      <tibble> #> # … with 43 more rows, and abbreviated variable names ¹​data_element_name, #> #   ²​data_element_shortname, ³​data_element_description, #> #   ⁴​data_element_valuetype, ⁵​data_element_formname, ⁶​used_optionset_uid msf_dict_survey(\"Mortality\") #> # A tibble: 174 × 15 #>    type    name  short…¹ label…² label…³ hint_…⁴ hint_…⁵ default relev…⁶ appea…⁷ #>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 start   start start   Start … NA      NA      NA      NA      NA      NA      #>  2 end     end   end     End Ti… NA      NA      NA      NA      NA      NA      #>  3 today   today today   Date o… NA      NA      NA      NA      NA      NA      #>  4 device… devi… device… Phone … NA      NA      NA      NA      NA      NA      #>  5 date    date  Date o… Date    Date    NA      NA      today() NA      NA      #>  6 integer team… Team n… Team n… Numéro… NA      NA      NA      NA      numbers #>  7 village vill… Villag… Villag… Nom du… NA      NA      NA      NA      NA      #>  8 text    vill… Other … Specif… Autre,… NA      NA      NA      ${vill… NA      #>  9 integer clus… Cluste… Cluste… Numéro… NA      NA      NA      NA      numbers #> 10 integer hous… Househ… Househ… Numéro… NA      NA      NA      NA      numbers #> # … with 164 more rows, 5 more variables: constraint <chr>, repeat_count <chr>, #> #   calculation <chr>, value_type <chr>, options <list>, and abbreviated #> #   variable names ¹​short_name, ²​label_english, ³​label_french, ⁴​hint_english, #> #   ⁵​hint_french, ⁶​relevant, ⁷​appearance msf_dict_survey(\"Nutrition\") #> # A tibble: 27 × 15 #>    type    name  short…¹ label…² label…³ hint_…⁴ hint_…⁵ repea…⁶ relev…⁷ calcu…⁸ #>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <lgl>   #>  1 start   start NA      Start … NA      NA      NA      NA      NA      NA      #>  2 end     end   NA      End Ti… NA      NA      NA      NA      NA      NA      #>  3 today   today NA      Date o… NA      NA      NA      NA      NA      NA      #>  4 device… devi… NA      Phone … NA      NA      NA      NA      NA      NA      #>  5 date    date  Date    Date    NA      NA      NA      NA      NA      NA      #>  6 integer team… Team n… Team n… NA      NA      NA      NA      NA      NA      #>  7 village vill… Villag… Villag… Nom du… NA      NA      NA      NA      NA      #>  8 text    vill… Other … Specif… Précis… NA      NA      NA      ${vill… NA      #>  9 geopoi… vill… Villag… Villag… Locali… NA      NA      NA      NA      NA      #> 10 integer clus… Cluste… Cluste… Numéro… NA      NA      NA      NA      NA      #> # … with 17 more rows, 5 more variables: constraint <chr>, appearance <chr>, #> #   default <chr>, value_type <chr>, options <list>, and abbreviated variable #> #   names ¹​short_name, ²​label_english, ³​label_french, ⁴​hint_english, #> #   ⁵​hint_french, ⁶​repeat_count, ⁷​relevant, ⁸​calculation msf_dict_survey(\"Vaccination_long\") #> # A tibble: 106 × 15 #>    type    name  short…¹ label…² label…³ hint_…⁴ hint_…⁵ default relev…⁶ appea…⁷ #>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 start   start NA      Start … Start … NA      NA      NA      NA      NA      #>  2 end     end   NA      End Ti… End Ti… NA      NA      NA      NA      NA      #>  3 today   today NA      Date o… Date o… NA      NA      NA      NA      NA      #>  4 device… devi… NA      Phone … Phone … NA      NA      NA      NA      NA      #>  5 date    date  Date    Date    Date    NA      NA      today() NA      NA      #>  6 integer team… Team n… Team n… Numéro… NA      NA      NA      NA      NA      #>  7 village vill… Villag… Villag… Nom du… NA      NA      NA      NA      NA      #>  8 text    vill… Other … Specif… Veuill… NA      NA      NA      ${vill… NA      #>  9 integer clus… Cluste… Cluste… Numéro… NA      NA      NA      NA      numbers #> 10 integer hous… Househ… Househ… Numéro… NA      NA      NA      NA      NA      #> # … with 96 more rows, 5 more variables: repeat_count <chr>, constraint <chr>, #> #   calculation <chr>, value_type <chr>, options <list>, and abbreviated #> #   variable names ¹​short_name, ²​label_english, ³​label_french, ⁴​hint_english, #> #   ⁵​hint_french, ⁶​relevant, ⁷​appearance msf_dict_survey(\"Vaccination_short\") #> # A tibble: 38 × 16 #>    type    name  short…¹ label…² label…³ hint_…⁴ hint_…⁵ default relev…⁶ appea…⁷ #>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 start   start NA      Start … Start … NA      NA      NA      NA      NA      #>  2 end     end   NA      End Ti… End Ti… NA      NA      NA      NA      NA      #>  3 today   today NA      Date o… Date o… NA      NA      NA      NA      NA      #>  4 device… devi… NA      Phone … Phone … NA      NA      NA      NA      NA      #>  5 date    date  Date    Date    Date    NA      NA      .today… NA      NA      #>  6 integer team… Team n… Team n… Numéro… NA      NA      NA      NA      NA      #>  7 village vill… Villag… Villag… Nom du… NA      NA      NA      NA      NA      #>  8 text    vill… Other … Specif… Veuill… NA      NA      NA      ${vill… NA      #>  9 integer clus… Cluste… Cluste… Numéro… NA      NA      NA      NA      numbers #> 10 integer hous… Househ… Househ… Numéro… NA      NA      NA      NA      NA      #> # … with 28 more rows, 6 more variables: repeat_count <chr>, constraint <chr>, #> #   calculation <chr>, hxl <chr>, value_type <chr>, options <list>, and #> #   abbreviated variable names ¹​short_name, ²​label_english, ³​label_french, #> #   ⁴​hint_english, ⁵​hint_french, ⁶​relevant, ⁷​appearance"},{"path":"https://r4epi.github.io/epidict/articles/intro.html","id":"generating-data","dir":"Articles","previous_headings":"","what":"Generating data","title":"Introduction to epidict","text":"{epidict} package function generating data ’s called gen_data(), takes three arguments: dictionary, column describes variable names, many rows needed output.","code":"gen_data(\"Measles\", varnames = \"data_element_shortname\", numcases = 100, org = \"MSF\") #> # A tibble: 100 × 52 #>    case_number date_of_c…¹ patie…² patie…³ age_y…⁴ age_m…⁵ age_d…⁶ sex   pregn…⁷ #>    <chr>       <date>      <fct>   <chr>     <int>   <int>   <int> <fct> <fct>   #>  1 A1          2018-02-17  IP      Villag…       8      NA      NA M     NA      #>  2 A2          2018-01-10  IP      Villag…      47      NA      NA U     NA      #>  3 A3          2018-04-22  IP      Villag…      NA      21      NA M     NA      #>  4 A4          2018-03-25  IP      Villag…       7      NA      NA M     NA      #>  5 A5          2018-01-11  OP      Villag…      88      NA      NA U     NA      #>  6 A6          2018-04-23  IP      Villag…      38      NA      NA F     NA      #>  7 A7          2018-04-11  IP      Villag…      14      NA      NA M     NA      #>  8 A8          2018-01-24  IP      Villag…      20      NA      NA F     N       #>  9 A9          2018-02-18  IP      Villag…      44      NA      NA F     NA      #> 10 A10         2018-02-11  OP      Villag…      86      NA      NA M     NA      #> # … with 90 more rows, 43 more variables: trimester <fct>, #> #   foetus_alive_at_admission <fct>, exit_status <fct>, date_of_exit <date>, #> #   time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   baby_born_with_complications <fct>, previously_vaccinated <fct>, #> #   previous_vaccine_doses_received <fct>, detected_by <fct>, #> #   msf_involvement <fct>, residential_status <fct>, #> #   residential_status_brief <fct>, date_of_last_vaccination <date>, … gen_data(\"Vaccination_long\", varnames = \"name\", numcases = 100, org = \"MSF\") #> # A tibble: 100 × 120 #>    start end   today deviceid date       team_…¹ villa…² villa…³ clust…⁴ house…⁵ #>    <lgl> <lgl> <lgl> <lgl>    <date>     <lgl>   <fct>   <lgl>     <dbl>   <int> #>  1 NA    NA    NA    NA       2018-02-10 NA      villag… NA            7       2 #>  2 NA    NA    NA    NA       2018-01-23 NA      villag… NA            1       1 #>  3 NA    NA    NA    NA       2018-01-31 NA      villag… NA            2       3 #>  4 NA    NA    NA    NA       2018-01-24 NA      villag… NA            4       2 #>  5 NA    NA    NA    NA       2018-02-11 NA      villag… NA            9       3 #>  6 NA    NA    NA    NA       2018-02-04 NA      villag… NA            9       1 #>  7 NA    NA    NA    NA       2018-01-29 NA      villag… NA            9       4 #>  8 NA    NA    NA    NA       2018-04-18 NA      villag… NA            9       2 #>  9 NA    NA    NA    NA       2018-04-08 NA      villag… NA            2       3 #> 10 NA    NA    NA    NA       2018-02-09 NA      villag… NA            9       2 #> # … with 90 more rows, 110 more variables: households_building <int>, #> #   random_hh <int>, consent <chr>, no_consent_reason <fct>, #> #   no_consent_other <lgl>, caretaker_relation <fct>, caretaker_other <lgl>, #> #   number_children <dbl>, child_number <chr>, sex <fct>, date_birth <date>, #> #   age_years <int>, age_months <int>, any_vaccine <fct>, vaccine_card <fct>, #> #   hf_records <fct>, health_facility <lgl>, date_records_checked <date>, #> #   injection_upper_arm <fct>, scar_present <fct>, poliodrop_woc <fct>, …"},{"path":"https://r4epi.github.io/epidict/articles/intro.html","id":"cleaning-data-with-the-dictionaries","dir":"Articles","previous_headings":"","what":"Cleaning data with the dictionaries","title":"Introduction to epidict","text":"can use dictionaries clean data via {matchmaker} package:","code":"library(\"matchmaker\") library(\"dplyr\")  dat <- gen_data(dictionary = \"Cholera\",    varnames = \"data_element_shortname\",   numcases = 20,   org = \"MSF\" ) print(dat) #> # A tibble: 20 × 45 #>    case_number date_of_c…¹ patie…² age_y…³ age_m…⁴ age_d…⁵ sex   pregn…⁶ trime…⁷ #>    <chr>       <date>      <chr>     <int>   <int>   <int> <fct> <fct>   <fct>   #>  1 A1          2018-02-09  Villag…      23      NA      NA M     NA      NA      #>  2 A2          2018-01-20  Villag…      12      NA      NA M     NA      NA      #>  3 A3          2018-01-13  Villag…      44      NA      NA U     NA      NA      #>  4 A4          2018-04-23  Villag…      76      NA      NA F     NA      NA      #>  5 A5          2018-04-19  Villag…      16      NA      NA F     N       NA      #>  6 A6          2018-04-27  Villag…      52      NA      NA U     NA      NA      #>  7 A7          2018-04-27  Villag…      70      NA      NA U     NA      NA      #>  8 A8          2018-03-15  Villag…      65      NA      NA M     NA      NA      #>  9 A9          2018-01-20  Villag…      13      NA      NA M     NA      NA      #> 10 A10         2018-03-17  Villag…      43      NA      NA M     NA      NA      #> 11 A11         2018-04-10  Villag…      24      NA      NA F     Y       1       #> 12 A12         2018-02-23  Villag…       8      NA      NA U     NA      NA      #> 13 A13         2018-01-23  Villag…      55      NA      NA U     NA      NA      #> 14 A14         2018-03-14  Villag…      40      NA      NA U     NA      NA      #> 15 A15         2018-01-29  Villag…      34      NA      NA F     Y       2       #> 16 A16         2018-02-10  Villag…      60      NA      NA U     NA      NA      #> 17 A17         2018-04-08  Villag…      29      NA      NA U     NA      NA      #> 18 A18         2018-02-14  Villag…      NA       8      NA M     NA      NA      #> 19 A19         2018-03-12  Villag…      29      NA      NA M     NA      NA      #> 20 A20         2018-03-06  Villag…      17      NA      NA M     NA      NA      #> # … with 36 more variables: foetus_alive_at_admission <fct>, exit_status <fct>, #> #   date_of_exit <date>, time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   previously_vaccinated <fct>, previous_vaccine_doses_received <fct>, #> #   readmission <fct>, msf_involvement <fct>, #> #   cholera_treatment_facility_type <fct>, residential_status_brief <fct>, #> #   date_of_last_vaccination <date>, prescribed_zinc_supplement <fct>, #> #   prescribed_antibiotics <fct>, ors_consumed_litres <int>, …  # We want the expanded dictionary, so we will select `compact = FALSE` dict <- msf_dict(disease = \"Cholera\",    long    = TRUE,   compact = FALSE,   tibble  = TRUE ) print(dict) #> # A tibble: 182 × 11 #>    data_elemen…¹ data_…² data_…³ data_…⁴ data_…⁵ data_…⁶ used_…⁷ optio…⁸ optio…⁹ #>    <chr>         <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 AafTlSwliVQ   egen_0… case_n… Anonym… TEXT    Case n… NA      NA      NA      #>  2 OTGOtWBz39J   egen_0… date_o… Date p… DATE    Date o… NA      NA      NA      #>  3 wnmMr2V3T3u   egen_0… patien… Locati… ORGANI… Patien… NA      NA      NA      #>  4 sbgqjeVwtb8   egen_0… age_ye… Age of… INTEGE… Age in… NA      NA      NA      #>  5 eXYhovYyl61   egen_0… age_mo… Age of… INTEGE… Age in… NA      NA      NA      #>  6 UrYJSk2Wp46   egen_0… age_da… Age of… INTEGE… Age in… NA      NA      NA      #>  7 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… M       Male    #>  8 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… F       Female  #>  9 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… U       Unknow… #> 10 dTm5R53YYXC   egen_0… pregna… Pregna… TEXT    Pregna… IEjzG2… N       Not cu… #> # … with 172 more rows, 2 more variables: option_uid <chr>, #> #   option_order_in_set <dbl>, and abbreviated variable names #> #   ¹​data_element_uid, ²​data_element_name, ³​data_element_shortname, #> #   ⁴​data_element_description, ⁵​data_element_valuetype, ⁶​data_element_formname, #> #   ⁷​used_optionset_uid, ⁸​option_code, ⁹​option_name  # Now we can use matchmaker to filter the data dat_clean <- matchmaker::match_df(dat, dict,    from  = \"option_code\",   to    = \"option_name\",   by    = \"data_element_shortname\",   order = \"option_order_in_set\" ) print(dat_clean) #> # A tibble: 20 × 45 #>    case_number date_of_c…¹ patie…² age_y…³ age_m…⁴ age_d…⁵ sex   pregn…⁶ trime…⁷ #>    <chr>       <date>      <chr>     <int>   <int>   <int> <fct> <fct>   <fct>   #>  1 A1          2018-02-09  Villag…      23      NA      NA Male  Not ap… NA      #>  2 A2          2018-01-20  Villag…      12      NA      NA Male  Not ap… NA      #>  3 A3          2018-01-13  Villag…      44      NA      NA Unkn… Not ap… NA      #>  4 A4          2018-04-23  Villag…      76      NA      NA Fema… Not ap… NA      #>  5 A5          2018-04-19  Villag…      16      NA      NA Fema… Not cu… NA      #>  6 A6          2018-04-27  Villag…      52      NA      NA Unkn… Not ap… NA      #>  7 A7          2018-04-27  Villag…      70      NA      NA Unkn… Not ap… NA      #>  8 A8          2018-03-15  Villag…      65      NA      NA Male  Not ap… NA      #>  9 A9          2018-01-20  Villag…      13      NA      NA Male  Not ap… NA      #> 10 A10         2018-03-17  Villag…      43      NA      NA Male  Not ap… NA      #> 11 A11         2018-04-10  Villag…      24      NA      NA Fema… Yes, c… 1st tr… #> 12 A12         2018-02-23  Villag…       8      NA      NA Unkn… Not ap… NA      #> 13 A13         2018-01-23  Villag…      55      NA      NA Unkn… Not ap… NA      #> 14 A14         2018-03-14  Villag…      40      NA      NA Unkn… Not ap… NA      #> 15 A15         2018-01-29  Villag…      34      NA      NA Fema… Yes, c… 2nd tr… #> 16 A16         2018-02-10  Villag…      60      NA      NA Unkn… Not ap… NA      #> 17 A17         2018-04-08  Villag…      29      NA      NA Unkn… Not ap… NA      #> 18 A18         2018-02-14  Villag…      NA       8      NA Male  Not ap… NA      #> 19 A19         2018-03-12  Villag…      29      NA      NA Male  Not ap… NA      #> 20 A20         2018-03-06  Villag…      17      NA      NA Male  Not ap… NA      #> # … with 36 more variables: foetus_alive_at_admission <fct>, exit_status <fct>, #> #   date_of_exit <date>, time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   previously_vaccinated <fct>, previous_vaccine_doses_received <fct>, #> #   readmission <fct>, msf_involvement <fct>, #> #   cholera_treatment_facility_type <fct>, residential_status_brief <fct>, #> #   date_of_last_vaccination <date>, prescribed_zinc_supplement <fct>, #> #   prescribed_antibiotics <fct>, ors_consumed_litres <int>, …"},{"path":"https://r4epi.github.io/epidict/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alexander Spina. Author, maintainer. Zhian N. Kamvar. Author. Lukas Richter. Author. Patrick Keating. Author. Annick Lenglet. Contributor.","code":""},{"path":"https://r4epi.github.io/epidict/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Spina , Kamvar Z, Richter L, Keating P (2022). epidict: Epidemiology data dictionaries random data generators. https://r4epis.netlify.com, https://github.com/R4EPI/epidict, https://r4epi.github.io/epidict, https://r4epi.github.io/epidict/.","code":"@Manual{,   title = {epidict: Epidemiology data dictionaries and random data generators},   author = {Alexander Spina and Zhian N. Kamvar and Lukas Richter and Patrick Keating},   year = {2022},   note = {https://r4epis.netlify.com, https://github.com/R4EPI/epidict, https://r4epi.github.io/epidict, https://r4epi.github.io/epidict/}, }"},{"path":"https://r4epi.github.io/epidict/index.html","id":"epidict","dir":"","previous_headings":"","what":"Epidemiology data dictionaries and random data generators","title":"Epidemiology data dictionaries and random data generators","text":"goal {epidict} provide standardized data dictionaries use epidemiological data analysis templates. Currently supports standardised dictionaries MSF OCA. product R4EPIs project; learn https://r4epis.netlify.com","code":""},{"path":"https://r4epi.github.io/epidict/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Epidemiology data dictionaries and random data generators","text":"can install {epidict} CRAN: bugfix feature yet CRAN, can install via {drat} package: can also install -development version GitHub using {remotes} package (’s guarantee stable):","code":"install.packages(\"epidict\") # install.packages(\"remotes\") remotes::install_github(\"R4EPI/epidict\")"},{"path":"https://r4epi.github.io/epidict/index.html","id":"accessing-dictionaries","dir":"","previous_headings":"","what":"Accessing dictionaries","title":"Epidemiology data dictionaries and random data generators","text":"four MSF outbreak dictionaries available {epidict} based DHIS2 exports: Acute Jaundice Syndrome (often suspected Hepatitis E) (“AJS”) Cholera/Acute watery diarrhea (“Cholera”) Measles/Rubella (“Measles”) Meningitis (“Meningitis”) can read outbreak dictionaries https://r4epis.netlify.com/outbreaks dictionary can obtained via msf_dict() function, specifies dictionary describes recorded variables (data_element_shortname) rows possible options (categorical): addition, four MSF survey dictionaries available: Retrospective mortality access care (“Mortality”) Malnutrition (“Nutrition”) Vaccination coverage long form (“vaccination_long”) Vaccination coverage short form (“vaccination_short”) can read survey dictionaries https://r4epis.netlify.com/surveys accessible via msf_dict_survey() variables name. can also read Kobo (ODK) dictionaries specifying tempalte = FALSE setting name = <path .xlsx>.","code":"library(\"epidict\") msf_dict(\"AJS\") #> # A tibble: 68 × 8 #>    data_element_uid data_elem…¹ data_…² data_…³ data_…⁴ data_…⁵ used_…⁶ options  #>    <lgl>            <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <list>   #>  1 NA               egen_044_e… event_… Is the… TEXT    <NA>    HgdrO8… <tibble> #>  2 NA               egen_001_p… case_n… Anonym… TEXT    <NA>    <NA>    <tibble> #>  3 NA               egen_004_d… date_o… Date p… DATE    <NA>    <NA>    <tibble> #>  4 NA               egen_022_d… detect… How pa… TEXT    <NA>    BlfHX5… <tibble> #>  5 NA               egen_005_p… patien… Patien… TEXT    <NA>    YNeOOp… <tibble> #>  6 NA               egen_029_m… msf_in… How ex… TEXT    <NA>    PN5NWt… <tibble> #>  7 NA               egen_008_a… age_ye… Age of… INTEGE… <NA>    <NA>    <tibble> #>  8 NA               egen_009_a… age_mo… Age of… INTEGE… <NA>    <NA>    <tibble> #>  9 NA               egen_010_a… age_da… Age of… INTEGE… <NA>    <NA>    <tibble> #> 10 NA               egen_011_s… sex     Sex of… TEXT    <NA>    orgc5Y… <tibble> #> # … with 58 more rows, and abbreviated variable names ¹​data_element_name, #> #   ²​data_element_shortname, ³​data_element_description, #> #   ⁴​data_element_valuetype, ⁵​data_element_formname, ⁶​used_optionset_uid #> # ℹ Use `print(n = ...)` to see more rows msf_dict(\"Cholera\") #> # A tibble: 45 × 8 #>    data_element_uid data_elem…¹ data_…² data_…³ data_…⁴ data_…⁵ used_…⁶ options  #>    <chr>            <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <list>   #>  1 AafTlSwliVQ      egen_001_p… case_n… Anonym… TEXT    Case n… <NA>    <tibble> #>  2 OTGOtWBz39J      egen_004_d… date_o… Date p… DATE    Date o… <NA>    <tibble> #>  3 wnmMr2V3T3u      egen_006_p… patien… Locati… ORGANI… Patien… <NA>    <tibble> #>  4 sbgqjeVwtb8      egen_008_a… age_ye… Age of… INTEGE… Age in… <NA>    <tibble> #>  5 eXYhovYyl61      egen_009_a… age_mo… Age of… INTEGE… Age in… <NA>    <tibble> #>  6 UrYJSk2Wp46      egen_010_a… age_da… Age of… INTEGE… Age in… <NA>    <tibble> #>  7 D1Ky5K7pFN6      egen_011_s… sex     Sex of… TEXT    Sex     orgc5Y… <tibble> #>  8 dTm5R53YYXC      egen_012_p… pregna… Pregna… TEXT    Pregna… IEjzG2… <tibble> #>  9 FF7d81Zy0yQ      egen_013_p… trimes… If pre… TEXT    Trimes… QjGHFN… <tibble> #> 10 vLAmA6Pmjip      egen_014_p… foetus… If pre… TEXT    Foetus… SR8Jtf… <tibble> #> # … with 35 more rows, and abbreviated variable names ¹​data_element_name, #> #   ²​data_element_shortname, ³​data_element_description, #> #   ⁴​data_element_valuetype, ⁵​data_element_formname, ⁶​used_optionset_uid #> # ℹ Use `print(n = ...)` to see more rows msf_dict(\"Measles\") #> # A tibble: 52 × 8 #>    data_element_uid data_elem…¹ data_…² data_…³ data_…⁴ data_…⁵ used_…⁶ options  #>    <chr>            <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <list>   #>  1 DE_EGEN_001      egen_001_p… case_n… Anonym… TEXT    Case n… <NA>    <tibble> #>  2 DE_EGEN_004      egen_004_d… date_o… Date p… DATE    Date o… <NA>    <tibble> #>  3 DE_EGEN_005      egen_005_p… patien… Patien… TEXT    Patien… YNeOOp… <tibble> #>  4 DE_EGEN_006      egen_006_p… patien… Locati… ORGANI… Patien… <NA>    <tibble> #>  5 DE_EGEN_008      egen_008_a… age_ye… Age of… INTEGE… Age in… <NA>    <tibble> #>  6 DE_EGEN_009      egen_009_a… age_mo… Age of… INTEGE… Age in… <NA>    <tibble> #>  7 DE_EGEN_010      egen_010_a… age_da… Age of… INTEGE… Age in… <NA>    <tibble> #>  8 DE_EGEN_011      egen_011_s… sex     Sex of… TEXT    Sex     orgc5Y… <tibble> #>  9 DE_EGEN_012      egen_012_p… pregna… Pregna… TEXT    Pregna… IEjzG2… <tibble> #> 10 DE_EGEN_013      egen_013_p… trimes… If pre… TEXT    Trimes… QjGHFN… <tibble> #> # … with 42 more rows, and abbreviated variable names ¹​data_element_name, #> #   ²​data_element_shortname, ³​data_element_description, #> #   ⁴​data_element_valuetype, ⁵​data_element_formname, ⁶​used_optionset_uid #> # ℹ Use `print(n = ...)` to see more rows msf_dict(\"Meningitis\") #> # A tibble: 53 × 8 #>    data_element_uid data_elem…¹ data_…² data_…³ data_…⁴ data_…⁵ used_…⁶ options  #>    <chr>            <chr>       <chr>   <chr>   <chr>   <chr>   <chr>   <list>   #>  1 AafTlSwliVQ      egen_001_p… case_n… Anonym… TEXT    Case n… <NA>    <tibble> #>  2 OTGOtWBz39J      egen_004_d… date_o… Date p… DATE    Date o… <NA>    <tibble> #>  3 udXAcFEE1dl      egen_005_p… patien… Patien… TEXT    Patien… YNeOOp… <tibble> #>  4 wnmMr2V3T3u      egen_006_p… patien… Locati… ORGANI… Patien… <NA>    <tibble> #>  5 sbgqjeVwtb8      egen_008_a… age_ye… Age of… INTEGE… Age in… <NA>    <tibble> #>  6 eXYhovYyl61      egen_009_a… age_mo… Age of… INTEGE… Age in… <NA>    <tibble> #>  7 UrYJSk2Wp46      egen_010_a… age_da… Age of… INTEGE… Age in… <NA>    <tibble> #>  8 D1Ky5K7pFN6      egen_011_s… sex     Sex of… TEXT    Sex     orgc5Y… <tibble> #>  9 ADfNqpCL5kf      egen_015_e… exit_s… Final … TEXT    Exit s… hO9TET… <tibble> #> 10 JZ8yqTow79G      egen_016_d… date_o… Date p… DATE    Exit d… <NA>    <tibble> #> # … with 43 more rows, and abbreviated variable names ¹​data_element_name, #> #   ²​data_element_shortname, ³​data_element_description, #> #   ⁴​data_element_valuetype, ⁵​data_element_formname, ⁶​used_optionset_uid #> # ℹ Use `print(n = ...)` to see more rows msf_dict_survey(\"Mortality\") #> # A tibble: 174 × 15 #>    type    name  short…¹ label…² label…³ hint_…⁴ hint_…⁵ default relev…⁶ appea…⁷ #>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 start   start start   Start … <NA>    <NA>    <NA>    <NA>    <NA>    <NA>    #>  2 end     end   end     End Ti… <NA>    <NA>    <NA>    <NA>    <NA>    <NA>    #>  3 today   today today   Date o… <NA>    <NA>    <NA>    <NA>    <NA>    <NA>    #>  4 device… devi… device… Phone … <NA>    <NA>    <NA>    <NA>    <NA>    <NA>    #>  5 date    date  Date o… Date    Date    <NA>    <NA>    today() <NA>    <NA>    #>  6 integer team… Team n… Team n… Numéro… <NA>    <NA>    <NA>    <NA>    numbers #>  7 village vill… Villag… Villag… Nom du… <NA>    <NA>    <NA>    <NA>    <NA>    #>  8 text    vill… Other … Specif… Autre,… <NA>    <NA>    <NA>    ${vill… <NA>    #>  9 integer clus… Cluste… Cluste… Numéro… <NA>    <NA>    <NA>    <NA>    numbers #> 10 integer hous… Househ… Househ… Numéro… <NA>    <NA>    <NA>    <NA>    numbers #> # … with 164 more rows, 5 more variables: constraint <chr>, repeat_count <chr>, #> #   calculation <chr>, value_type <chr>, options <list>, and abbreviated #> #   variable names ¹​short_name, ²​label_english, ³​label_french, ⁴​hint_english, #> #   ⁵​hint_french, ⁶​relevant, ⁷​appearance #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names msf_dict_survey(\"Nutrition\") #> # A tibble: 27 × 15 #>    type    name  short…¹ label…² label…³ hint_…⁴ hint_…⁵ repea…⁶ relev…⁷ calcu…⁸ #>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <lgl>   #>  1 start   start <NA>    Start … <NA>    <NA>    <NA>    <NA>    <NA>    NA      #>  2 end     end   <NA>    End Ti… <NA>    <NA>    <NA>    <NA>    <NA>    NA      #>  3 today   today <NA>    Date o… <NA>    <NA>    <NA>    <NA>    <NA>    NA      #>  4 device… devi… <NA>    Phone … <NA>    <NA>    <NA>    <NA>    <NA>    NA      #>  5 date    date  Date    Date    <NA>    <NA>    <NA>    <NA>    <NA>    NA      #>  6 integer team… Team n… Team n… <NA>    <NA>    <NA>    <NA>    <NA>    NA      #>  7 village vill… Villag… Villag… Nom du… <NA>    <NA>    <NA>    <NA>    NA      #>  8 text    vill… Other … Specif… Précis… <NA>    <NA>    <NA>    ${vill… NA      #>  9 geopoi… vill… Villag… Villag… Locali… <NA>    <NA>    <NA>    <NA>    NA      #> 10 integer clus… Cluste… Cluste… Numéro… <NA>    <NA>    <NA>    <NA>    NA      #> # … with 17 more rows, 5 more variables: constraint <chr>, appearance <chr>, #> #   default <chr>, value_type <chr>, options <list>, and abbreviated variable #> #   names ¹​short_name, ²​label_english, ³​label_french, ⁴​hint_english, #> #   ⁵​hint_french, ⁶​repeat_count, ⁷​relevant, ⁸​calculation #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names msf_dict_survey(\"Vaccination_long\") #> # A tibble: 106 × 15 #>    type    name  short…¹ label…² label…³ hint_…⁴ hint_…⁵ default relev…⁶ appea…⁷ #>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 start   start <NA>    Start … Start … <NA>    <NA>    <NA>    <NA>    <NA>    #>  2 end     end   <NA>    End Ti… End Ti… <NA>    <NA>    <NA>    <NA>    <NA>    #>  3 today   today <NA>    Date o… Date o… <NA>    <NA>    <NA>    <NA>    <NA>    #>  4 device… devi… <NA>    Phone … Phone … <NA>    <NA>    <NA>    <NA>    <NA>    #>  5 date    date  Date    Date    Date    <NA>    <NA>    today() <NA>    <NA>    #>  6 integer team… Team n… Team n… Numéro… <NA>    <NA>    <NA>    <NA>    <NA>    #>  7 village vill… Villag… Villag… Nom du… <NA>    <NA>    <NA>    <NA>    <NA>    #>  8 text    vill… Other … Specif… Veuill… <NA>    <NA>    <NA>    ${vill… <NA>    #>  9 integer clus… Cluste… Cluste… Numéro… <NA>    <NA>    <NA>    <NA>    numbers #> 10 integer hous… Househ… Househ… Numéro… <NA>    <NA>    <NA>    <NA>    <NA>    #> # … with 96 more rows, 5 more variables: repeat_count <chr>, constraint <chr>, #> #   calculation <chr>, value_type <chr>, options <list>, and abbreviated #> #   variable names ¹​short_name, ²​label_english, ³​label_french, ⁴​hint_english, #> #   ⁵​hint_french, ⁶​relevant, ⁷​appearance #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names msf_dict_survey(\"Vaccination_short\") #> # A tibble: 38 × 16 #>    type    name  short…¹ label…² label…³ hint_…⁴ hint_…⁵ default relev…⁶ appea…⁷ #>    <chr>   <chr> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 start   start <NA>    Start … Start … <NA>    <NA>    <NA>    <NA>    <NA>    #>  2 end     end   <NA>    End Ti… End Ti… <NA>    <NA>    <NA>    <NA>    <NA>    #>  3 today   today <NA>    Date o… Date o… <NA>    <NA>    <NA>    <NA>    <NA>    #>  4 device… devi… <NA>    Phone … Phone … <NA>    <NA>    <NA>    <NA>    <NA>    #>  5 date    date  Date    Date    Date    <NA>    <NA>    .today… <NA>    <NA>    #>  6 integer team… Team n… Team n… Numéro… <NA>    <NA>    <NA>    <NA>    <NA>    #>  7 village vill… Villag… Villag… Nom du… <NA>    <NA>    <NA>    <NA>    <NA>    #>  8 text    vill… Other … Specif… Veuill… <NA>    <NA>    <NA>    ${vill… <NA>    #>  9 integer clus… Cluste… Cluste… Numéro… <NA>    <NA>    <NA>    <NA>    numbers #> 10 integer hous… Househ… Househ… Numéro… <NA>    <NA>    <NA>    <NA>    <NA>    #> # … with 28 more rows, 6 more variables: repeat_count <chr>, constraint <chr>, #> #   calculation <chr>, hxl <chr>, value_type <chr>, options <list>, and #> #   abbreviated variable names ¹​short_name, ²​label_english, ³​label_french, #> #   ⁴​hint_english, ⁵​hint_french, ⁶​relevant, ⁷​appearance #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"},{"path":"https://r4epi.github.io/epidict/index.html","id":"generating-data","dir":"","previous_headings":"","what":"Generating data","title":"Epidemiology data dictionaries and random data generators","text":"{epidict} package function generating data ’s called gen_data(), takes three arguments: dictionary, column describes variable names, many rows needed output.","code":"gen_data(\"Measles\", varnames = \"data_element_shortname\", numcases = 100, org = \"MSF\") #> # A tibble: 100 × 52 #>    case_number date_of_c…¹ patie…² patie…³ age_y…⁴ age_m…⁵ age_d…⁶ sex   pregn…⁷ #>    <chr>       <date>      <fct>   <chr>     <int>   <int>   <int> <fct> <fct>   #>  1 A1          2018-04-05  IP      Villag…      38      NA      NA M     NA      #>  2 A2          2018-01-07  OP      Villag…      77      NA      NA M     NA      #>  3 A3          2018-03-18  IP      Villag…      13      NA      NA F     NA      #>  4 A4          2018-02-16  IP      Villag…      28      NA      NA F     Y       #>  5 A5          2018-03-25  IP      Villag…      NA      NA       9 U     NA      #>  6 A6          2018-03-16  IP      Villag…      24      NA      NA F     Y       #>  7 A7          2018-04-09  OP      Villag…      86      NA      NA M     NA      #>  8 A8          2018-04-08  IP      Villag…       8      NA      NA U     NA      #>  9 A9          2018-03-23  OP      Villag…      60      NA      NA M     NA      #> 10 A10         2018-04-23  OP      Villag…      21      NA      NA U     NA      #> # … with 90 more rows, 43 more variables: trimester <fct>, #> #   foetus_alive_at_admission <fct>, exit_status <fct>, date_of_exit <date>, #> #   time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   baby_born_with_complications <fct>, previously_vaccinated <fct>, #> #   previous_vaccine_doses_received <fct>, detected_by <fct>, #> #   msf_involvement <fct>, residential_status <fct>, #> #   residential_status_brief <fct>, date_of_last_vaccination <date>, … #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names gen_data(\"Vaccination_long\", varnames = \"name\", numcases = 100, org = \"MSF\") #> # A tibble: 100 × 120 #>    start end   today deviceid date       team_…¹ villa…² villa…³ clust…⁴ house…⁵ #>    <lgl> <lgl> <lgl> <lgl>    <date>     <lgl>   <fct>   <lgl>     <dbl>   <int> #>  1 NA    NA    NA    NA       2018-02-18 NA      villag… NA            1       1 #>  2 NA    NA    NA    NA       2018-02-13 NA      villag… NA            7       2 #>  3 NA    NA    NA    NA       2018-02-21 NA      villag… NA            6       1 #>  4 NA    NA    NA    NA       2018-02-24 NA      other   NA           11       1 #>  5 NA    NA    NA    NA       2018-03-21 NA      villag… NA            3       1 #>  6 NA    NA    NA    NA       2018-04-06 NA      villag… NA            7       1 #>  7 NA    NA    NA    NA       2018-02-09 NA      villag… NA            3       2 #>  8 NA    NA    NA    NA       2018-04-29 NA      villag… NA            4       3 #>  9 NA    NA    NA    NA       2018-04-15 NA      villag… NA            8       1 #> 10 NA    NA    NA    NA       2018-03-26 NA      villag… NA            8       3 #> # … with 90 more rows, 110 more variables: households_building <int>, #> #   random_hh <int>, consent <chr>, no_consent_reason <fct>, #> #   no_consent_other <lgl>, caretaker_relation <fct>, caretaker_other <lgl>, #> #   number_children <dbl>, child_number <chr>, sex <fct>, date_birth <date>, #> #   age_years <int>, age_months <int>, any_vaccine <fct>, vaccine_card <fct>, #> #   hf_records <fct>, health_facility <lgl>, date_records_checked <date>, #> #   injection_upper_arm <fct>, scar_present <fct>, poliodrop_woc <fct>, … #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"},{"path":"https://r4epi.github.io/epidict/index.html","id":"cleaning-data-with-the-dictionaries","dir":"","previous_headings":"","what":"Cleaning data with the dictionaries","title":"Epidemiology data dictionaries and random data generators","text":"can use dictionaries clean data via {matchmaker} package:","code":"library(\"matchmaker\") library(\"dplyr\")  dat <- gen_data(dictionary = \"Cholera\",    varnames = \"data_element_shortname\",   numcases = 20,   org = \"MSF\" ) print(dat) #> # A tibble: 20 × 45 #>    case_number date_of_c…¹ patie…² age_y…³ age_m…⁴ age_d…⁵ sex   pregn…⁶ trime…⁷ #>    <chr>       <date>      <chr>     <int>   <int>   <int> <fct> <fct>   <fct>   #>  1 A1          2018-03-08  Villag…       8      NA      NA M     NA      <NA>    #>  2 A2          2018-04-09  Villag…       9      NA      NA U     NA      <NA>    #>  3 A3          2018-02-21  Villag…       8      NA      NA M     NA      <NA>    #>  4 A4          2018-04-24  Villag…       3      NA      NA U     NA      <NA>    #>  5 A5          2018-04-07  Villag…      52      NA      NA M     NA      <NA>    #>  6 A6          2018-01-30  Villag…      24      NA      NA M     NA      <NA>    #>  7 A7          2018-02-21  Villag…      57      NA      NA U     NA      <NA>    #>  8 A8          2018-01-10  Villag…      12      NA      NA F     NA      <NA>    #>  9 A9          2018-01-11  Villag…      NA      NA       3 U     NA      <NA>    #> 10 A10         2018-04-02  Villag…       7      NA      NA F     Y       2       #> 11 A11         2018-04-10  Villag…      12      NA      NA F     W       <NA>    #> 12 A12         2018-02-19  Villag…      23      NA      NA M     NA      <NA>    #> 13 A13         2018-02-12  Villag…      NA       8      NA F     N       <NA>    #> 14 A14         2018-01-31  Villag…      66      NA      NA U     NA      <NA>    #> 15 A15         2018-01-11  Villag…       7      NA      NA U     NA      <NA>    #> 16 A16         2018-04-22  Villag…      25      NA      NA M     NA      <NA>    #> 17 A17         2018-01-10  Villag…      27      NA      NA F     NA      <NA>    #> 18 A18         2018-01-18  Villag…      16      NA      NA F     N       <NA>    #> 19 A19         2018-03-05  Villag…       9      NA      NA F     NA      <NA>    #> 20 A20         2018-02-13  Villag…       8      NA      NA M     NA      <NA>    #> # … with 36 more variables: foetus_alive_at_admission <fct>, exit_status <fct>, #> #   date_of_exit <date>, time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   previously_vaccinated <fct>, previous_vaccine_doses_received <fct>, #> #   readmission <fct>, msf_involvement <fct>, #> #   cholera_treatment_facility_type <fct>, residential_status_brief <fct>, #> #   date_of_last_vaccination <date>, prescribed_zinc_supplement <fct>, #> #   prescribed_antibiotics <fct>, ors_consumed_litres <int>, … #> # ℹ Use `colnames()` to see all variable names  # We want the expanded dictionary, so we will select `compact = FALSE` dict <- msf_dict(disease = \"Cholera\",    long    = TRUE,   compact = FALSE,   tibble  = TRUE ) print(dict) #> # A tibble: 182 × 11 #>    data_elemen…¹ data_…² data_…³ data_…⁴ data_…⁵ data_…⁶ used_…⁷ optio…⁸ optio…⁹ #>    <chr>         <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 AafTlSwliVQ   egen_0… case_n… Anonym… TEXT    Case n… <NA>    <NA>    <NA>    #>  2 OTGOtWBz39J   egen_0… date_o… Date p… DATE    Date o… <NA>    <NA>    <NA>    #>  3 wnmMr2V3T3u   egen_0… patien… Locati… ORGANI… Patien… <NA>    <NA>    <NA>    #>  4 sbgqjeVwtb8   egen_0… age_ye… Age of… INTEGE… Age in… <NA>    <NA>    <NA>    #>  5 eXYhovYyl61   egen_0… age_mo… Age of… INTEGE… Age in… <NA>    <NA>    <NA>    #>  6 UrYJSk2Wp46   egen_0… age_da… Age of… INTEGE… Age in… <NA>    <NA>    <NA>    #>  7 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… M       Male    #>  8 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… F       Female  #>  9 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… U       Unknow… #> 10 dTm5R53YYXC   egen_0… pregna… Pregna… TEXT    Pregna… IEjzG2… N       Not cu… #> # … with 172 more rows, 2 more variables: option_uid <chr>, #> #   option_order_in_set <dbl>, and abbreviated variable names #> #   ¹​data_element_uid, ²​data_element_name, ³​data_element_shortname, #> #   ⁴​data_element_description, ⁵​data_element_valuetype, ⁶​data_element_formname, #> #   ⁷​used_optionset_uid, ⁸​option_code, ⁹​option_name #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names  # Now we can use matchmaker to filter the data dat_clean <- matchmaker::match_df(dat, dict,    from  = \"option_code\",   to    = \"option_name\",   by    = \"data_element_shortname\",   order = \"option_order_in_set\" ) print(dat_clean) #> # A tibble: 20 × 45 #>    case_number date_of_c…¹ patie…² age_y…³ age_m…⁴ age_d…⁵ sex   pregn…⁶ trime…⁷ #>    <chr>       <date>      <chr>     <int>   <int>   <int> <fct> <fct>   <fct>   #>  1 A1          2018-03-08  Villag…       8      NA      NA Male  Not ap… <NA>    #>  2 A2          2018-04-09  Villag…       9      NA      NA Unkn… Not ap… <NA>    #>  3 A3          2018-02-21  Villag…       8      NA      NA Male  Not ap… <NA>    #>  4 A4          2018-04-24  Villag…       3      NA      NA Unkn… Not ap… <NA>    #>  5 A5          2018-04-07  Villag…      52      NA      NA Male  Not ap… <NA>    #>  6 A6          2018-01-30  Villag…      24      NA      NA Male  Not ap… <NA>    #>  7 A7          2018-02-21  Villag…      57      NA      NA Unkn… Not ap… <NA>    #>  8 A8          2018-01-10  Villag…      12      NA      NA Fema… Not ap… <NA>    #>  9 A9          2018-01-11  Villag…      NA      NA       3 Unkn… Not ap… <NA>    #> 10 A10         2018-04-02  Villag…       7      NA      NA Fema… Yes, c… 2nd tr… #> 11 A11         2018-04-10  Villag…      12      NA      NA Fema… Was pr… <NA>    #> 12 A12         2018-02-19  Villag…      23      NA      NA Male  Not ap… <NA>    #> 13 A13         2018-02-12  Villag…      NA       8      NA Fema… Not cu… <NA>    #> 14 A14         2018-01-31  Villag…      66      NA      NA Unkn… Not ap… <NA>    #> 15 A15         2018-01-11  Villag…       7      NA      NA Unkn… Not ap… <NA>    #> 16 A16         2018-04-22  Villag…      25      NA      NA Male  Not ap… <NA>    #> 17 A17         2018-01-10  Villag…      27      NA      NA Fema… Not ap… <NA>    #> 18 A18         2018-01-18  Villag…      16      NA      NA Fema… Not cu… <NA>    #> 19 A19         2018-03-05  Villag…       9      NA      NA Fema… Not ap… <NA>    #> 20 A20         2018-02-13  Villag…       8      NA      NA Male  Not ap… <NA>    #> # … with 36 more variables: foetus_alive_at_admission <fct>, exit_status <fct>, #> #   date_of_exit <date>, time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   previously_vaccinated <fct>, previous_vaccine_doses_received <fct>, #> #   readmission <fct>, msf_involvement <fct>, #> #   cholera_treatment_facility_type <fct>, residential_status_brief <fct>, #> #   date_of_last_vaccination <date>, prescribed_zinc_supplement <fct>, #> #   prescribed_antibiotics <fct>, ors_consumed_litres <int>, … #> # ℹ Use `colnames()` to see all variable names"},{"path":"https://r4epi.github.io/epidict/reference/epidict-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epidict: Epidemiology data dictionaries and random data generators — epidict-package","title":"epidict: Epidemiology data dictionaries and random data generators — epidict-package","text":"'R4EPIs' project <https://R4epis.netlify.com> seeks provide set standardized tools analysis outbreak survey data humanitarian aid settings. package currently provides standardized data dictionaries MSF OCA four outbreak scenarios (Acute Jaundice Syndrome, Cholera, Measles, Meningitis) three surveys (Retrospective mortality access care, Malnutrition, Vaccination coverage). addition, data generator dictionaries provided.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/reference/epidict-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epidict: Epidemiology data dictionaries and random data generators — epidict-package","text":"Maintainer: Zhian N. Kamvar zkamvar@gmail.com (ORCID) Authors: Alexander Spina alexfspina@gmail.com (ORCID) Lukas Richter Patrick Keating contributors: Annick Lenglet [contributor]","code":""},{"path":"https://r4epi.github.io/epidict/reference/gen_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate random linelist or survey data — gen_data","title":"Generate random linelist or survey data — gen_data","text":"Based dictionary generator like msf_dict() msf_dict_survey(), function generate randomized data set based values defined dictionaries. randomized dataset produced mimic excel export DHIS2 outbreaks Kobo export surveys.","code":""},{"path":"https://r4epi.github.io/epidict/reference/gen_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate random linelist or survey data — gen_data","text":"","code":"gen_data(   dictionary,   varnames = \"data_element_shortname\",   numcases = 300,   org = \"MSF\" )"},{"path":"https://r4epi.github.io/epidict/reference/gen_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate random linelist or survey data — gen_data","text":"dictionary Specify dictionary like use. varnames Specify name column contains variable names. dictionary survey, varnames needs \"name\"`. numcases Specify number cases want (default 300) org organization dictionary belongs . Currently, MSF exists. future, dictionaries organizations may become available.","code":""},{"path":"https://r4epi.github.io/epidict/reference/gen_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate random linelist or survey data — gen_data","text":"data frame cases rows variables columns. number columns vary dictionary dictionary, please use dictionary functions generate corresponding dictionary.","code":""},{"path":"https://r4epi.github.io/epidict/reference/gen_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate random linelist or survey data — gen_data","text":"","code":"if (require(\"dplyr\") & require(\"matchmaker\")) {   withAutoprint({      # You will often want to use MSF dictionaries to translate codes to human-     # readable variables. Here, we generate a data set of 20 cases:     dat <- gen_data(       dictionary = \"Cholera\",       varnames = \"data_element_shortname\",       numcases = 20,       org = \"MSF\"     )     print(dat)      # We want the expanded dictionary, so we will select `compact = FALSE`     dict <- msf_dict(disease = \"Cholera\", long = TRUE, compact = FALSE, tibble = TRUE)     print(dict)      # Now we can use matchmaker to filter the data:     dat_clean <- matchmaker::match_df(dat, dict,       from = \"option_code\",       to = \"option_name\",       by = \"data_element_shortname\",       order = \"option_order_in_set\"     )     print(dat_clean)    }) } #> Loading required package: dplyr #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union #> Loading required package: matchmaker #> > dat <- gen_data(dictionary = \"Cholera\", varnames = \"data_element_shortname\",  #> +     numcases = 20, org = \"MSF\") #> > print(dat) #> # A tibble: 20 × 45 #>    case_number date_of_c…¹ patie…² age_y…³ age_m…⁴ age_d…⁵ sex   pregn…⁶ trime…⁷ #>    <chr>       <date>      <chr>     <int>   <int>   <int> <fct> <fct>   <fct>   #>  1 A1          2018-02-09  Villag…      83      NA      NA M     NA      NA      #>  2 A2          2018-04-07  Villag…      78      NA      NA U     NA      NA      #>  3 A3          2018-04-01  Villag…      30      NA      NA F     N       NA      #>  4 A4          2018-04-23  Villag…      21      NA      NA M     NA      NA      #>  5 A5          2018-03-18  Villag…      13      NA      NA F     Y       1       #>  6 A6          2018-03-18  Villag…      73      NA      NA M     NA      NA      #>  7 A7          2018-03-27  Villag…      53      NA      NA M     NA      NA      #>  8 A8          2018-02-14  Villag…      27      NA      NA U     NA      NA      #>  9 A9          2018-04-10  Villag…      63      NA      NA U     NA      NA      #> 10 A10         2018-04-16  Villag…      40      NA      NA U     NA      NA      #> 11 A11         2018-02-23  Villag…      18      NA      NA M     NA      NA      #> 12 A12         2018-01-12  Villag…      30      NA      NA U     NA      NA      #> 13 A13         2018-03-28  Villag…      10      NA      NA F     Y       3       #> 14 A14         2018-04-24  Villag…      20      NA      NA F     N       NA      #> 15 A15         2018-01-27  Villag…      NA       9      NA F     NA      NA      #> 16 A16         2018-02-20  Villag…      57      NA      NA M     NA      NA      #> 17 A17         2018-02-15  Villag…      NA      12      NA U     NA      NA      #> 18 A18         2018-01-01  Villag…      15      NA      NA U     NA      NA      #> 19 A19         2018-04-10  Villag…      34      NA      NA F     W       NA      #> 20 A20         2018-03-20  Villag…       8      NA      NA F     N       NA      #> # … with 36 more variables: foetus_alive_at_admission <fct>, exit_status <fct>, #> #   date_of_exit <date>, time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   previously_vaccinated <fct>, previous_vaccine_doses_received <fct>, #> #   readmission <fct>, msf_involvement <fct>, #> #   cholera_treatment_facility_type <fct>, residential_status_brief <fct>, #> #   date_of_last_vaccination <date>, prescribed_zinc_supplement <fct>, #> #   prescribed_antibiotics <fct>, ors_consumed_litres <int>, … #> > dict <- msf_dict(disease = \"Cholera\", long = TRUE, compact = FALSE, tibble = TRUE) #> > print(dict) #> # A tibble: 182 × 11 #>    data_elemen…¹ data_…² data_…³ data_…⁴ data_…⁵ data_…⁶ used_…⁷ optio…⁸ optio…⁹ #>    <chr>         <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 AafTlSwliVQ   egen_0… case_n… Anonym… TEXT    Case n… NA      NA      NA      #>  2 OTGOtWBz39J   egen_0… date_o… Date p… DATE    Date o… NA      NA      NA      #>  3 wnmMr2V3T3u   egen_0… patien… Locati… ORGANI… Patien… NA      NA      NA      #>  4 sbgqjeVwtb8   egen_0… age_ye… Age of… INTEGE… Age in… NA      NA      NA      #>  5 eXYhovYyl61   egen_0… age_mo… Age of… INTEGE… Age in… NA      NA      NA      #>  6 UrYJSk2Wp46   egen_0… age_da… Age of… INTEGE… Age in… NA      NA      NA      #>  7 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… M       Male    #>  8 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… F       Female  #>  9 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… U       Unknow… #> 10 dTm5R53YYXC   egen_0… pregna… Pregna… TEXT    Pregna… IEjzG2… N       Not cu… #> # … with 172 more rows, 2 more variables: option_uid <chr>, #> #   option_order_in_set <dbl>, and abbreviated variable names #> #   ¹​data_element_uid, ²​data_element_name, ³​data_element_shortname, #> #   ⁴​data_element_description, ⁵​data_element_valuetype, ⁶​data_element_formname, #> #   ⁷​used_optionset_uid, ⁸​option_code, ⁹​option_name #> > dat_clean <- matchmaker::match_df(dat, dict, from = \"option_code\", to = \"option_name\",  #> +     by = \"data_element_shortname\", order = \"option_order_in_set\") #> > print(dat_clean) #> # A tibble: 20 × 45 #>    case_number date_of_c…¹ patie…² age_y…³ age_m…⁴ age_d…⁵ sex   pregn…⁶ trime…⁷ #>    <chr>       <date>      <chr>     <int>   <int>   <int> <fct> <fct>   <fct>   #>  1 A1          2018-02-09  Villag…      83      NA      NA Male  Not ap… NA      #>  2 A2          2018-04-07  Villag…      78      NA      NA Unkn… Not ap… NA      #>  3 A3          2018-04-01  Villag…      30      NA      NA Fema… Not cu… NA      #>  4 A4          2018-04-23  Villag…      21      NA      NA Male  Not ap… NA      #>  5 A5          2018-03-18  Villag…      13      NA      NA Fema… Yes, c… 1st tr… #>  6 A6          2018-03-18  Villag…      73      NA      NA Male  Not ap… NA      #>  7 A7          2018-03-27  Villag…      53      NA      NA Male  Not ap… NA      #>  8 A8          2018-02-14  Villag…      27      NA      NA Unkn… Not ap… NA      #>  9 A9          2018-04-10  Villag…      63      NA      NA Unkn… Not ap… NA      #> 10 A10         2018-04-16  Villag…      40      NA      NA Unkn… Not ap… NA      #> 11 A11         2018-02-23  Villag…      18      NA      NA Male  Not ap… NA      #> 12 A12         2018-01-12  Villag…      30      NA      NA Unkn… Not ap… NA      #> 13 A13         2018-03-28  Villag…      10      NA      NA Fema… Yes, c… 3rd tr… #> 14 A14         2018-04-24  Villag…      20      NA      NA Fema… Not cu… NA      #> 15 A15         2018-01-27  Villag…      NA       9      NA Fema… Not ap… NA      #> 16 A16         2018-02-20  Villag…      57      NA      NA Male  Not ap… NA      #> 17 A17         2018-02-15  Villag…      NA      12      NA Unkn… Not ap… NA      #> 18 A18         2018-01-01  Villag…      15      NA      NA Unkn… Not ap… NA      #> 19 A19         2018-04-10  Villag…      34      NA      NA Fema… Was pr… NA      #> 20 A20         2018-03-20  Villag…       8      NA      NA Fema… Not cu… NA      #> # … with 36 more variables: foetus_alive_at_admission <fct>, exit_status <fct>, #> #   date_of_exit <date>, time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   previously_vaccinated <fct>, previous_vaccine_doses_received <fct>, #> #   readmission <fct>, msf_involvement <fct>, #> #   cholera_treatment_facility_type <fct>, residential_status_brief <fct>, #> #   date_of_last_vaccination <date>, prescribed_zinc_supplement <fct>, #> #   prescribed_antibiotics <fct>, ors_consumed_litres <int>, …"},{"path":"https://r4epi.github.io/epidict/reference/msf_dict.html","id":null,"dir":"Reference","previous_headings":"","what":"MSF data dictionaries and dummy datasets — msf_dict","title":"MSF data dictionaries and dummy datasets — msf_dict","text":"function produces MSF OCA dictionaries based DHIS2 (outbreaks) Kobo (surveys) data sets defining data element name, code, short names, types, key/value pairs translating codes human-readable format.","code":""},{"path":"https://r4epi.github.io/epidict/reference/msf_dict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MSF data dictionaries and dummy datasets — msf_dict","text":"","code":"msf_dict(   disease,   name = \"MSF-outbreak-dict.xlsx\",   tibble = TRUE,   compact = TRUE,   long = TRUE )  msf_dict_survey(   disease,   name = \"MSF-survey-dict.xlsx\",   tibble = TRUE,   compact = TRUE,   long = TRUE,   template = TRUE )"},{"path":"https://r4epi.github.io/epidict/reference/msf_dict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MSF data dictionaries and dummy datasets — msf_dict","text":"disease Specify disease like use. msf_dict() supports \"AJS\", \"Cholera\", \"Measles\", \"Meningitis\" msf_dict_survey() supports \"Mortality\", \"Nutrition\", \"Vaccination_long\" \"Vaccination_short\" (used surveys template = TRUE) name name dictionary stored package. msf_dict_survey() supports Kobo dictionaries stored within package, use : specify nameas path .xlsx file set template = False tibble Return data dictionary tidyverse tibble (default TRUE) compact TRUE (default), nested data frame returned row represents single variable nested data frame column called \"options\", can expanded tidyr::unnest(). works long = TRUE. long TRUE (default), returned data dictionary long format option getting one row. FALSE, two data frames returned, one variables content options. @param template used msf_dict_survey(). TRUE (default) returned data dictionary generic MSF OCA ERB pre-approved dictionary. FALSE allows read Kobo dictionary defining path name. template (survey dictionaries): TRUE read generic dictionary based MSF OCA ERB pre-approved template. However can also specify dictionary differs substantially, setting template = FALSE defining path name.","code":""},{"path":[]},{"path":"https://r4epi.github.io/epidict/reference/msf_dict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MSF data dictionaries and dummy datasets — msf_dict","text":"","code":"if (require(\"dplyr\") & require(\"matchmaker\")) {   withAutoprint({     # You will often want to use MSF dictionaries to translate codes to human-     # readable variables. Here, we generate a data set of 20 cases:     dat <- gen_data(       dictionary = \"Cholera\",       varnames = \"data_element_shortname\",       numcases = 20,       org = \"MSF\"     )     print(dat)      # We want the expanded dictionary, so we will select `compact = FALSE`     dict <- msf_dict(disease = \"Cholera\", long = TRUE, compact = FALSE, tibble = TRUE)     print(dict)      # Now we can use matchmaker to filter the data:     dat_clean <- matchmaker::match_df(dat, dict,       from = \"option_code\",       to = \"option_name\",       by = \"data_element_shortname\",       order = \"option_order_in_set\"     )     print(dat_clean)   }) } #> > dat <- gen_data(dictionary = \"Cholera\", varnames = \"data_element_shortname\",  #> +     numcases = 20, org = \"MSF\") #> > print(dat) #> # A tibble: 20 × 45 #>    case_number date_of_c…¹ patie…² age_y…³ age_m…⁴ age_d…⁵ sex   pregn…⁶ trime…⁷ #>    <chr>       <date>      <chr>     <int>   <int>   <int> <fct> <fct>   <fct>   #>  1 A1          2018-04-02  Villag…      82      NA      NA F     W       NA      #>  2 A2          2018-01-17  Villag…      10      NA      NA U     NA      NA      #>  3 A3          2018-01-16  Villag…      23      NA      NA M     NA      NA      #>  4 A4          2018-03-02  Villag…      63      NA      NA M     NA      NA      #>  5 A5          2018-04-27  Villag…      40      NA      NA M     NA      NA      #>  6 A6          2018-01-31  Villag…      18      NA      NA M     NA      NA      #>  7 A7          2018-02-25  Villag…      37      NA      NA F     Y       1       #>  8 A8          2018-02-05  Villag…      47      NA      NA F     NA      NA      #>  9 A9          2018-03-20  Villag…      15      NA      NA M     NA      NA      #> 10 A10         2018-01-06  Villag…      35      NA      NA F     NA      NA      #> 11 A11         2018-04-08  Villag…      62      NA      NA F     W       NA      #> 12 A12         2018-01-08  Villag…      56      NA      NA U     NA      NA      #> 13 A13         2018-01-08  Villag…      26      NA      NA F     NA      NA      #> 14 A14         2018-03-13  Villag…      16      NA      NA M     NA      NA      #> 15 A15         2018-01-26  Villag…      61      NA      NA M     NA      NA      #> 16 A16         2018-02-14  Villag…      44      NA      NA M     NA      NA      #> 17 A17         2018-01-02  Villag…      59      NA      NA U     NA      NA      #> 18 A18         2018-02-08  Villag…      74      NA      NA U     NA      NA      #> 19 A19         2018-02-18  Villag…       7      NA      NA F     NA      NA      #> 20 A20         2018-03-02  Villag…      42      NA      NA F     N       NA      #> # … with 36 more variables: foetus_alive_at_admission <fct>, exit_status <fct>, #> #   date_of_exit <date>, time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   previously_vaccinated <fct>, previous_vaccine_doses_received <fct>, #> #   readmission <fct>, msf_involvement <fct>, #> #   cholera_treatment_facility_type <fct>, residential_status_brief <fct>, #> #   date_of_last_vaccination <date>, prescribed_zinc_supplement <fct>, #> #   prescribed_antibiotics <fct>, ors_consumed_litres <int>, … #> > dict <- msf_dict(disease = \"Cholera\", long = TRUE, compact = FALSE, tibble = TRUE) #> > print(dict) #> # A tibble: 182 × 11 #>    data_elemen…¹ data_…² data_…³ data_…⁴ data_…⁵ data_…⁶ used_…⁷ optio…⁸ optio…⁹ #>    <chr>         <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   #>  1 AafTlSwliVQ   egen_0… case_n… Anonym… TEXT    Case n… NA      NA      NA      #>  2 OTGOtWBz39J   egen_0… date_o… Date p… DATE    Date o… NA      NA      NA      #>  3 wnmMr2V3T3u   egen_0… patien… Locati… ORGANI… Patien… NA      NA      NA      #>  4 sbgqjeVwtb8   egen_0… age_ye… Age of… INTEGE… Age in… NA      NA      NA      #>  5 eXYhovYyl61   egen_0… age_mo… Age of… INTEGE… Age in… NA      NA      NA      #>  6 UrYJSk2Wp46   egen_0… age_da… Age of… INTEGE… Age in… NA      NA      NA      #>  7 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… M       Male    #>  8 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… F       Female  #>  9 D1Ky5K7pFN6   egen_0… sex     Sex of… TEXT    Sex     orgc5Y… U       Unknow… #> 10 dTm5R53YYXC   egen_0… pregna… Pregna… TEXT    Pregna… IEjzG2… N       Not cu… #> # … with 172 more rows, 2 more variables: option_uid <chr>, #> #   option_order_in_set <dbl>, and abbreviated variable names #> #   ¹​data_element_uid, ²​data_element_name, ³​data_element_shortname, #> #   ⁴​data_element_description, ⁵​data_element_valuetype, ⁶​data_element_formname, #> #   ⁷​used_optionset_uid, ⁸​option_code, ⁹​option_name #> > dat_clean <- matchmaker::match_df(dat, dict, from = \"option_code\", to = \"option_name\",  #> +     by = \"data_element_shortname\", order = \"option_order_in_set\") #> > print(dat_clean) #> # A tibble: 20 × 45 #>    case_number date_of_c…¹ patie…² age_y…³ age_m…⁴ age_d…⁵ sex   pregn…⁶ trime…⁷ #>    <chr>       <date>      <chr>     <int>   <int>   <int> <fct> <fct>   <fct>   #>  1 A1          2018-04-02  Villag…      82      NA      NA Fema… Was pr… NA      #>  2 A2          2018-01-17  Villag…      10      NA      NA Unkn… Not ap… NA      #>  3 A3          2018-01-16  Villag…      23      NA      NA Male  Not ap… NA      #>  4 A4          2018-03-02  Villag…      63      NA      NA Male  Not ap… NA      #>  5 A5          2018-04-27  Villag…      40      NA      NA Male  Not ap… NA      #>  6 A6          2018-01-31  Villag…      18      NA      NA Male  Not ap… NA      #>  7 A7          2018-02-25  Villag…      37      NA      NA Fema… Yes, c… 1st tr… #>  8 A8          2018-02-05  Villag…      47      NA      NA Fema… Not ap… NA      #>  9 A9          2018-03-20  Villag…      15      NA      NA Male  Not ap… NA      #> 10 A10         2018-01-06  Villag…      35      NA      NA Fema… Not ap… NA      #> 11 A11         2018-04-08  Villag…      62      NA      NA Fema… Was pr… NA      #> 12 A12         2018-01-08  Villag…      56      NA      NA Unkn… Not ap… NA      #> 13 A13         2018-01-08  Villag…      26      NA      NA Fema… Not ap… NA      #> 14 A14         2018-03-13  Villag…      16      NA      NA Male  Not ap… NA      #> 15 A15         2018-01-26  Villag…      61      NA      NA Male  Not ap… NA      #> 16 A16         2018-02-14  Villag…      44      NA      NA Male  Not ap… NA      #> 17 A17         2018-01-02  Villag…      59      NA      NA Unkn… Not ap… NA      #> 18 A18         2018-02-08  Villag…      74      NA      NA Unkn… Not ap… NA      #> 19 A19         2018-02-18  Villag…       7      NA      NA Fema… Not ap… NA      #> 20 A20         2018-03-02  Villag…      42      NA      NA Fema… Not cu… NA      #> # … with 36 more variables: foetus_alive_at_admission <fct>, exit_status <fct>, #> #   date_of_exit <date>, time_to_death <fct>, pregnancy_outcome_at_exit <fct>, #> #   previously_vaccinated <fct>, previous_vaccine_doses_received <fct>, #> #   readmission <fct>, msf_involvement <fct>, #> #   cholera_treatment_facility_type <fct>, residential_status_brief <fct>, #> #   date_of_last_vaccination <date>, prescribed_zinc_supplement <fct>, #> #   prescribed_antibiotics <fct>, ors_consumed_litres <int>, …"},{"path":"https://r4epi.github.io/epidict/reference/msf_dict_rename_helper.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for aligning your data to a standardised dictionary or your own dictionary. — msf_dict_rename_helper","title":"Helper for aligning your data to a standardised dictionary or your own dictionary. — msf_dict_rename_helper","text":"Helper aligning data standardised dictionary dictionary.","code":""},{"path":"https://r4epi.github.io/epidict/reference/msf_dict_rename_helper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper for aligning your data to a standardised dictionary or your own dictionary. — msf_dict_rename_helper","text":"","code":"msf_dict_rename_helper(   disease,   name,   varnames = \"data_element_shortname\",   varnames_type,   rmd,   template = TRUE,   copy_to_clipboard = TRUE )"},{"path":"https://r4epi.github.io/epidict/reference/msf_dict_rename_helper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for aligning your data to a standardised dictionary or your own dictionary. — msf_dict_rename_helper","text":"disease Specify disease like use. Currently supports \"Cholera\", \"Measles\", \"Meningitis\", \"AJS\", \"Mortality\", \"Nutrition\", \"Vaccination_short\" \"Vaccination_long\". name name dictionary stored package. default use dictionaries package. However can also use dictionaries stored within package, use : specify nameas path .xlsx file set template = False - nb. needs dataframe containing varnames varnames_type. also need specify path rmd. varnames name column contains variable names. default set \"data_element_shortname\". dictionary survey (\"Mortality\", \"Nutrition\", \"Vaccination_short\" \"Vaccination_long\") varnames needs \"name\"`. Otherwise using dictionary specify. varnames_type name column contains variable type. default use \"data_element_valuetype\" DHIS2 \"type\" Kobo dictionaries. specify dictionary needs length varnames dictionary. rmd Rmarkdown template like compare . Default use included package. However can also use Rmarkdowns stored within package, use : specify rmdas path .rmd file set template = False; nb. need specify path file name contains varnames varnames_type. template TRUE (default) read generic dictionary Rmarkdown based MSF OCA ERB pre-approved template. However can also specify dictionary differs substantially, setting template = FALSE. copy_to_clipboard TRUE (default), rename template copied user's clipboard clipr::write_clip(). FALSE, rename template printed user's console.","code":""},{"path":"https://r4epi.github.io/epidict/reference/msf_dict_rename_helper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper for aligning your data to a standardised dictionary or your own dictionary. — msf_dict_rename_helper","text":"dplyr command used rename columns data frame according dictionary","code":""},{"path":"https://r4epi.github.io/epidict/news/index.html","id":"epidict-0009001","dir":"Changelog","previous_headings":"","what":"epidict 0.0.0.9001","title":"epidict 0.0.0.9001","text":"Updating surveys ODK format Updating documentation pkgdown Adding short long form vaccination dictionary Adding survey dictionaries rename helper function","code":""},{"path":"https://r4epi.github.io/epidict/news/index.html","id":"epidict-0009000","dir":"Changelog","previous_headings":"","what":"epidict 0.0.0.9000","title":"epidict 0.0.0.9000","text":"Fix broken URLs README Add vignettes README describing dictionaries Release CRAN Fix bug generating elegible interviewed Mortality Nurition surveys","code":""},{"path":"https://r4epi.github.io/epidict/news/index.html","id":"epidict-0009000-1","dir":"Changelog","previous_headings":"","what":"epidict 0.0.0.9000","title":"epidict 0.0.0.9000","text":"Added NEWS.md file track changes package. Generalize gen_data() function able take different organization dictionaries future. Tidy code.","code":""}]
